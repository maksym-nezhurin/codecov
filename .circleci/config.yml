# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"
  install-dependencies-build-test:
    docker:
      - image: cimg/node:14.17.0
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          command: |
            curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.22.5 && export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
            yarn --frozen-lockfile
          name: Install Dependencies
      - save_cache:
          key: v1-dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - node_modules/
      - run:
          command: mkdir -p test-results/jest
          name: Create test summary dir
      - run:
          command: yarn build && yarn test:ci
          environment:
            JEST_JUNIT_OUTPUT_DIR: test-results/jest
          name: Run unit and integration tests
  generate-code-coverage:
    docker:
      - image: cimg/node:14.17.0
    steps:
      - checkout
      - run:
          command: bash <(curl -s https://codecov.io/bash) -Z -t $CODECOV_REPOSITORY_UPLOAD_TOKEN -s coverage
          name: Generate test code coverage

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build-workflow:
    jobs:
      - say-hello
      - install-dependencies-build-test
      - generate-code-coverage
